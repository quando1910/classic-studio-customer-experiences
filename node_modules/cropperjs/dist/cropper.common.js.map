{"version":3,"file":"cropper.common.js","sources":["../src/js/constants.js","../src/js/defaults.js","../src/js/template.js","../src/js/utilities.js","../src/js/render.js","../src/js/preview.js","../src/js/events.js","../src/js/handlers.js","../src/js/change.js","../src/js/methods.js","../src/js/cropper.js"],"sourcesContent":["export const WINDOW = typeof window !== 'undefined' ? window : {};\nexport const NAMESPACE = 'cropper';\n\n// Actions\nexport const ACTION_ALL = 'all';\nexport const ACTION_CROP = 'crop';\nexport const ACTION_MOVE = 'move';\nexport const ACTION_ZOOM = 'zoom';\nexport const ACTION_EAST = 'e';\nexport const ACTION_WEST = 'w';\nexport const ACTION_SOUTH = 's';\nexport const ACTION_NORTH = 'n';\nexport const ACTION_NORTH_EAST = 'ne';\nexport const ACTION_NORTH_WEST = 'nw';\nexport const ACTION_SOUTH_EAST = 'se';\nexport const ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nexport const CLASS_CROP = `${NAMESPACE}-crop`;\nexport const CLASS_DISABLED = `${NAMESPACE}-disabled`;\nexport const CLASS_HIDDEN = `${NAMESPACE}-hidden`;\nexport const CLASS_HIDE = `${NAMESPACE}-hide`;\nexport const CLASS_INVISIBLE = `${NAMESPACE}-invisible`;\nexport const CLASS_MODAL = `${NAMESPACE}-modal`;\nexport const CLASS_MOVE = `${NAMESPACE}-move`;\n\n// Data keys\nexport const DATA_ACTION = 'action';\nexport const DATA_PREVIEW = 'preview';\n\n// Drag modes\nexport const DRAG_MODE_CROP = 'crop';\nexport const DRAG_MODE_MOVE = 'move';\nexport const DRAG_MODE_NONE = 'none';\n\n// Events\nexport const EVENT_CROP = 'crop';\nexport const EVENT_CROP_END = 'cropend';\nexport const EVENT_CROP_MOVE = 'cropmove';\nexport const EVENT_CROP_START = 'cropstart';\nexport const EVENT_DBLCLICK = 'dblclick';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_LOAD = 'load';\nexport const EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nexport const EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nexport const EVENT_POINTER_UP = WINDOW.PointerEvent ? ' pointerup pointercancel' : 'touchend touchcancel mouseup';\nexport const EVENT_READY = 'ready';\nexport const EVENT_RESIZE = 'resize';\nexport const EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nexport const EVENT_ZOOM = 'zoom';\n\n// RegExps\nexport const REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nexport const REGEXP_DATA_URL = /^data:/;\nexport const REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nexport const REGEXP_TAG_NAME = /^(img|canvas)$/i;\n","import {\n  DRAG_MODE_CROP,\n} from './constants';\n\nexport default {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null,\n};\n","export default (\n  '<div class=\"cropper-container\">' +\n    '<div class=\"cropper-wrap-box\">' +\n      '<div class=\"cropper-canvas\"></div>' +\n    '</div>' +\n    '<div class=\"cropper-drag-box\"></div>' +\n    '<div class=\"cropper-crop-box\">' +\n      '<span class=\"cropper-view-box\"></span>' +\n      '<span class=\"cropper-dashed dashed-h\"></span>' +\n      '<span class=\"cropper-dashed dashed-v\"></span>' +\n      '<span class=\"cropper-center\"></span>' +\n      '<span class=\"cropper-face\"></span>' +\n      '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' +\n      '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' +\n      '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' +\n      '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' +\n      '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' +\n      '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' +\n      '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' +\n      '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' +\n      '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' +\n      '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' +\n      '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' +\n      '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' +\n    '</div>' +\n  '</div>'\n);\n","import {\n  WINDOW,\n} from './constants';\n\n/**\n * Check if the given value is not a number.\n */\nexport const isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nexport function isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nconst { hasOwnProperty } = Object.prototype;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\nexport function isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    const { constructor } = value;\n    const { prototype } = constructor;\n\n    return constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nexport function each(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)/* array-like */) {\n      const { length } = data;\n      let i;\n\n      for (i = 0; i < length; i += 1) {\n        if (callback.call(data, data[i], i, data) === false) {\n          break;\n        }\n      }\n    } else if (isObject(data)) {\n      Object.keys(data).forEach((key) => {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nexport function extend(obj, ...args) {\n  if (isObject(obj) && args.length > 0) {\n    if (Object.assign) {\n      return Object.assign(obj, ...args);\n    }\n\n    args.forEach((arg) => {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach((key) => {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n}\n\n/**\n * Takes a function and returns a new one that will always have a particular context.\n * @param {Function} fn - The target function.\n * @param {Object} context - The new context for the function.\n * @returns {boolean} The new function.\n */\nexport function proxy(fn, context, ...args) {\n  return (...args2) => fn.apply(context, args.concat(args2));\n}\n\nconst REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/ }\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nexport function normalizeDecimalNumber(value, times = 100000000000) {\n  return REGEXP_DECIMALS.test(value) ? (Math.round(value * times) / times) : value;\n}\n\nconst REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nexport function setStyle(element, styles) {\n  const { style } = element;\n\n  each(styles, (value, property) => {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nexport function hasClass(element, value) {\n  return element.classList ?\n    element.classList.contains(value) :\n    element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nexport function addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, (elem) => {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  const className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = `${className} ${value}`;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nexport function removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, (elem) => {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nexport function toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, (elem) => {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nconst REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Hyphenate the given value.\n * @param {string} value - The value to hyphenate.\n * @returns {string} The hyphenated value.\n */\nexport function hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nexport function getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(`data-${hyphenate(name)}`);\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nexport function setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(`data-${hyphenate(name)}`, data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nexport function removeData(element, name) {\n  if (isObject(element[name])) {\n    delete element[name];\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = null;\n    }\n  } else {\n    element.removeAttribute(`data-${hyphenate(name)}`);\n  }\n}\n\nconst REGEXP_SPACES = /\\s+/;\n\n/**\n * Remove event listener from the given element.\n * @param {Element} element - The target element.\n * @param {string} type - The event type(s) to remove,\n * @param {Function} listener - The event listener to remove.\n * @param {Object} options - The event options.\n */\nexport function removeListener(element, type, listener, options = {}) {\n  if (!isFunction(listener)) {\n    return;\n  }\n\n  const types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, (t) => {\n      removeListener(element, t, listener);\n    });\n    return;\n  }\n\n  if (isFunction(listener.onceListener)) {\n    listener = listener.onceListener;\n    delete listener.onceListener;\n  }\n\n  if (element.removeEventListener) {\n    element.removeEventListener(type, listener, options);\n  } else if (element.detachEvent) {\n    element.detachEvent(`on${type}`, listener);\n  }\n}\n\n/**\n * Add event listener to the given element.\n * @param {Element} element - The target element.\n * @param {string} type - The event type(s) to add,\n * @param {Function} listener - The event listener to add.\n * @param {Object} options - The event options.\n */\nexport function addListener(element, type, listener, options = {}) {\n  if (!isFunction(listener)) {\n    return;\n  }\n\n  const types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, (t) => {\n      addListener(element, t, listener);\n    });\n    return;\n  }\n\n  if (options.once) {\n    const originalListener = listener;\n    const onceListener = (...args) => {\n      removeListener(element, type, onceListener);\n      return originalListener.apply(element, args);\n    };\n    originalListener.onceListener = onceListener;\n    listener = onceListener;\n  }\n\n  if (element.addEventListener) {\n    element.addEventListener(type, listener, options);\n  } else if (element.attachEvent) {\n    element.attachEvent(`on${type}`, listener);\n  }\n}\n\n/**\n * Dispatch event on the given element.\n * @param {Element} element - The target element.\n * @param {string} type - The event type(s) to dispatch,\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nexport function dispatchEvent(element, type, data) {\n  if (element.dispatchEvent) {\n    let event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      if (isUndefined(data)) {\n        event = new Event(type, {\n          bubbles: true,\n          cancelable: true,\n        });\n      } else {\n        event = new CustomEvent(type, {\n          detail: data,\n          bubbles: true,\n          cancelable: true,\n        });\n      }\n    } else if (isUndefined(data)) {\n      event = document.createEvent('Event');\n      event.initEvent(type, true, true);\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    // IE9+\n    return element.dispatchEvent(event);\n  } else if (element.fireEvent) {\n    // IE6-10 (native events only)\n    return element.fireEvent(`on${type}`);\n  }\n\n  return true;\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nexport function getOffset(element) {\n  const doc = document.documentElement;\n  const box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + (\n      (window.scrollX || (doc && doc.scrollLeft) || 0) - ((doc && doc.clientLeft) || 0)\n    ),\n    top: box.top + (\n      (window.scrollY || (doc && doc.scrollTop) || 0) - ((doc && doc.clientTop) || 0)\n    ),\n  };\n}\n\n/**\n * Empty an element.\n * @param {Element} element - The element to empty.\n */\nexport function empty(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nconst { location } = WINDOW;\nconst REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nexport function isCrossOriginURL(url) {\n  const parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (\n    parts[1] !== location.protocol ||\n    parts[2] !== location.hostname ||\n    parts[3] !== location.port\n  );\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nexport function addTimestamp(url) {\n  const timestamp = `timestamp=${(new Date()).getTime()}`;\n\n  return (url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp);\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nexport function getTransforms({\n  rotate,\n  scaleX,\n  scaleY,\n  translateX,\n  translateY,\n}) {\n  const values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(`translateX(${translateX}px)`);\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(`translateY(${translateY}px)`);\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(`rotate(${rotate}deg)`);\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(`scaleX(${scaleX})`);\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(`scaleY(${scaleY})`);\n  }\n\n  const transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform,\n  };\n}\n\nconst { navigator } = WINDOW;\nconst IS_SAFARI_OR_UIWEBVIEW = navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);\n\n/**\n * Get an image's natural sizes.\n * @param {string} image - The target image.\n * @param {Function} callback - The callback function.\n */\nexport function getImageNaturalSizes(image, callback) {\n  // Modern browsers (except Safari)\n  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n    callback(image.naturalWidth, image.naturalHeight);\n    return;\n  }\n\n  const newImage = document.createElement('img');\n\n  newImage.onload = () => {\n    callback(newImage.width, newImage.height);\n  };\n\n  newImage.src = image.src;\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nexport function getMaxZoomRatio(pointers) {\n  const pointers2 = extend({}, pointers);\n  const ratios = [];\n\n  each(pointers, (pointer, pointerId) => {\n    delete pointers2[pointerId];\n\n    each(pointers2, (pointer2) => {\n      const x1 = Math.abs(pointer.startX - pointer2.startX);\n      const y1 = Math.abs(pointer.startY - pointer2.startY);\n      const x2 = Math.abs(pointer.endX - pointer2.endX);\n      const y2 = Math.abs(pointer.endY - pointer2.endY);\n      const z1 = Math.sqrt((x1 * x1) + (y1 * y1));\n      const z2 = Math.sqrt((x2 * x2) + (y2 * y2));\n      const ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort((a, b) => Math.abs(a) < Math.abs(b));\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nexport function getPointer({ pageX, pageY }, endOnly) {\n  const end = {\n    endX: pageX,\n    endY: pageY,\n  };\n\n  if (endOnly) {\n    return end;\n  }\n\n  return extend({\n    startX: pageX,\n    startY: pageY,\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nexport function getPointersCenter(pointers) {\n  let pageX = 0;\n  let pageY = 0;\n  let count = 0;\n\n  each(pointers, ({ startX, startY }) => {\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX,\n    pageY,\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nexport const isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nexport function getContainSizes({\n  aspectRatio,\n  height,\n  width,\n}) {\n  const isValidNumber = value => isFinite(value) && value > 0;\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width,\n    height,\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nexport function getRotatedSizes({ width, height, degree }) {\n  degree = Math.abs(degree);\n\n  if (degree % 180 === 90) {\n    return {\n      width: height,\n      height: width,\n    };\n  }\n\n  const arc = ((degree % 90) * Math.PI) / 180;\n  const sinArc = Math.sin(arc);\n  const cosArc = Math.cos(arc);\n\n  return {\n    width: (width * cosArc) + (height * sinArc),\n    height: (width * sinArc) + (height * cosArc),\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nexport function getSourceCanvas(\n  image,\n  {\n    naturalWidth: imageNaturalWidth,\n    naturalHeight: imageNaturalHeight,\n    rotate = 0,\n    scaleX = 1,\n    scaleY = 1,\n  },\n  {\n    aspectRatio,\n    naturalWidth,\n    naturalHeight,\n  },\n  {\n    fillColor = 'transparent',\n    imageSmoothingEnabled = true,\n    imageSmoothingQuality = 'low',\n    maxWidth = Infinity,\n    maxHeight = Infinity,\n    minWidth = 0,\n    minHeight = 0,\n  },\n) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  const maxSizes = getContainSizes({\n    aspectRatio,\n    width: maxWidth,\n    height: maxHeight,\n  });\n  const minSizes = getContainSizes({\n    aspectRatio,\n    width: minWidth,\n    height: minHeight,\n  });\n  const width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  const height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n  const params = [\n    -imageNaturalWidth / 2,\n    -imageNaturalHeight / 2,\n    imageNaturalWidth,\n    imageNaturalHeight,\n  ];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate((rotate * Math.PI) / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage(image, ...params.map(param => Math.floor(normalizeDecimalNumber(param))));\n  context.restore();\n  return canvas;\n}\n\nconst { fromCharCode } = String;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\nexport function getStringFromCharCode(dataView, start, length) {\n  let str = '';\n  let i;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nconst REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nexport function dataURLToArrayBuffer(dataURL) {\n  const base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  const binary = atob(base64);\n  const arrayBuffer = new ArrayBuffer(binary.length);\n  const uint8 = new Uint8Array(arrayBuffer);\n\n  each(uint8, (value, i) => {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nexport function arrayBufferToDataURL(arrayBuffer, mimeType) {\n  const uint8 = new Uint8Array(arrayBuffer);\n  let data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  each(uint8, (value) => {\n    data += fromCharCode(value);\n  });\n\n  return `data:${mimeType};base64,${btoa(data)}`;\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nexport function getOrientation(arrayBuffer) {\n  const dataView = new DataView(arrayBuffer);\n  let orientation;\n  let littleEndian;\n  let app1Start;\n  let ifdStart;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    const length = dataView.byteLength;\n    let offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    const exifIDCode = app1Start + 4;\n    const tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      const endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n          const firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n          if (firstIFDOffset >= 0x00000008) {\n            ifdStart = tiffOffset + firstIFDOffset;\n          }\n        }\n      }\n    }\n  }\n\n  if (ifdStart) {\n    const length = dataView.getUint16(ifdStart, littleEndian);\n    let offset;\n    let i;\n\n    for (i = 0; i < length; i += 1) {\n      offset = ifdStart + (i * 12) + 2;\n\n      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n        // 8 is the offset of the current tag's value\n        offset += 8;\n\n        // Get the original orientation value\n        orientation = dataView.getUint16(offset, littleEndian);\n\n        // Override the orientation with its default value\n        dataView.setUint16(offset, 1, littleEndian);\n        break;\n      }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nexport function parseOrientation(orientation) {\n  let rotate = 0;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate,\n    scaleX,\n    scaleY,\n  };\n}\n","import {\n  ACTION_ALL,\n  ACTION_MOVE,\n  CLASS_HIDDEN,\n  DATA_ACTION,\n  EVENT_CROP,\n} from './constants';\nimport {\n  addClass,\n  dispatchEvent,\n  extend,\n  getContainSizes,\n  getRotatedSizes,\n  getTransforms,\n  removeClass,\n  setData,\n  setStyle,\n} from './utilities';\n\nexport default {\n  render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n\n  initContainer() {\n    const {\n      element,\n      options,\n      container,\n      cropper,\n    } = this;\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    const containerData = {\n      width: Math.max(\n        container.offsetWidth,\n        Number(options.minContainerWidth) || 200,\n      ),\n      height: Math.max(\n        container.offsetHeight,\n        Number(options.minContainerHeight) || 100,\n      ),\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height,\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n  // Canvas (image wrapper)\n  initCanvas() {\n    const { containerData, imageData } = this;\n    const { viewMode } = this.options;\n    const rotated = Math.abs(imageData.rotate) % 180 === 90;\n    const naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    const naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    const aspectRatio = naturalWidth / naturalHeight;\n    let canvasWidth = containerData.width;\n    let canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    const canvasData = {\n      aspectRatio,\n      naturalWidth,\n      naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight,\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = (viewMode === 1 || viewMode === 2);\n    this.limitCanvas(true, true);\n    this.initialImageData = extend({}, imageData);\n    this.initialCanvasData = extend({}, canvasData);\n  },\n\n  limitCanvas(sizeLimited, positionLimited) {\n    const {\n      options,\n      containerData,\n      canvasData,\n      cropBoxData,\n    } = this;\n    const { viewMode } = options;\n    const { aspectRatio } = canvasData;\n    const cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      let minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      let minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(\n            minCanvasWidth,\n            cropped ? cropBoxData.width : 0,\n          );\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(\n            minCanvasHeight,\n            cropped ? cropBoxData.height : 0,\n          );\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      ({ width: minCanvasWidth, height: minCanvasHeight } = getContainSizes({\n        aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight,\n      }));\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        const newCanvasLeft = containerData.width - canvasData.width;\n        const newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(\n            cropBoxData.left,\n            cropBoxData.left + (cropBoxData.width - canvasData.width),\n          );\n          canvasData.minTop = Math.min(\n            cropBoxData.top,\n            cropBoxData.top + (cropBoxData.height - canvasData.height),\n          );\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n\n  renderCanvas(changed, transformed) {\n    const { canvasData, imageData } = this;\n\n    if (transformed) {\n      const { width: naturalWidth, height: naturalHeight } = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0,\n      });\n      const width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      const height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth ||\n      canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight ||\n      canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(\n      Math.max(canvasData.width, canvasData.minWidth),\n      canvasData.maxWidth,\n    );\n    canvasData.height = Math.min(\n      Math.max(canvasData.height, canvasData.minHeight),\n      canvasData.maxHeight,\n    );\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(\n      Math.max(canvasData.left, canvasData.minLeft),\n      canvasData.maxLeft,\n    );\n    canvasData.top = Math.min(\n      Math.max(canvasData.top, canvasData.minTop),\n      canvasData.maxTop,\n    );\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, extend({\n      width: canvasData.width,\n      height: canvasData.height,\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top,\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n\n  renderImage(changed) {\n    const { canvasData, imageData } = this;\n    const width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    const height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    extend(imageData, {\n      width,\n      height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2,\n    });\n    setStyle(this.image, extend({\n      width: imageData.width,\n      height: imageData.height,\n    }, getTransforms(extend({\n      translateX: imageData.left,\n      translateY: imageData.top,\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n\n  initCropBox() {\n    const { options, canvasData } = this;\n    const { aspectRatio } = options;\n    const autoCropArea = Number(options.autoCropArea) || 0.8;\n    const cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height,\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(\n      Math.max(cropBoxData.width, cropBoxData.minWidth),\n      cropBoxData.maxWidth,\n    );\n    cropBoxData.height = Math.min(\n      Math.max(cropBoxData.height, cropBoxData.minHeight),\n      cropBoxData.maxHeight,\n    );\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(\n      cropBoxData.minWidth,\n      cropBoxData.width * autoCropArea,\n    );\n    cropBoxData.height = Math.max(\n      cropBoxData.minHeight,\n      cropBoxData.height * autoCropArea,\n    );\n    cropBoxData.left = (\n      canvasData.left + ((canvasData.width - cropBoxData.width) / 2)\n    );\n    cropBoxData.top = (\n      canvasData.top + ((canvasData.height - cropBoxData.height) / 2)\n    );\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = extend({}, cropBoxData);\n  },\n\n  limitCropBox(sizeLimited, positionLimited) {\n    const {\n      options,\n      containerData,\n      canvasData,\n      cropBoxData,\n      limited,\n    } = this;\n    const { aspectRatio } = options;\n\n    if (sizeLimited) {\n      let minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      let minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      let maxCropBoxWidth = Math.min(\n        containerData.width,\n        limited ? canvasData.width : containerData.width,\n      );\n      let maxCropBoxHeight = Math.min(\n        containerData.height,\n        limited ? canvasData.height : containerData.height,\n      );\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(\n          containerData.width,\n          canvasData.left + canvasData.width,\n        ) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(\n          containerData.height,\n          canvasData.top + canvasData.height,\n        ) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n\n  renderCropBox() {\n    const { options, containerData, cropBoxData } = this;\n\n    if (cropBoxData.width > cropBoxData.maxWidth ||\n      cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight ||\n      cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(\n      Math.max(cropBoxData.width, cropBoxData.minWidth),\n      cropBoxData.maxWidth,\n    );\n    cropBoxData.height = Math.min(\n      Math.max(cropBoxData.height, cropBoxData.minHeight),\n      cropBoxData.maxHeight,\n    );\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(\n      Math.max(cropBoxData.left, cropBoxData.minLeft),\n      cropBoxData.maxLeft,\n    );\n    cropBoxData.top = Math.min(\n      Math.max(cropBoxData.top, cropBoxData.minTop),\n      cropBoxData.maxTop,\n    );\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width &&\n        cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, extend({\n      width: cropBoxData.width,\n      height: cropBoxData.height,\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top,\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n\n  output() {\n    this.preview();\n\n    if (this.complete) {\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  },\n};\n","import {\n  DATA_PREVIEW,\n} from './constants';\nimport {\n  each,\n  empty,\n  extend,\n  getData,\n  getTransforms,\n  removeData,\n  setData,\n  setStyle,\n} from './utilities';\n\nexport default {\n  initPreview() {\n    const { crossOrigin } = this;\n    const { preview } = this.options;\n    const url = crossOrigin ? this.crossOriginUrl : this.url;\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.image2 = image;\n\n    if (!preview) {\n      return;\n    }\n\n    const previews = preview.querySelector ? [preview] : document.querySelectorAll(preview);\n\n    this.previews = previews;\n\n    each(previews, (element) => {\n      const img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(element, DATA_PREVIEW, {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        html: element.innerHTML,\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = (\n        'display:block;' +\n        'width:100%;' +\n        'height:auto;' +\n        'min-width:0!important;' +\n        'min-height:0!important;' +\n        'max-width:none!important;' +\n        'max-height:none!important;' +\n        'image-orientation:0deg!important;\"'\n      );\n\n      empty(element);\n      element.appendChild(img);\n    });\n  },\n\n  resetPreview() {\n    each(this.previews, (element) => {\n      const data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height,\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n\n  preview() {\n    const { imageData, canvasData, cropBoxData } = this;\n    const { width: cropBoxWidth, height: cropBoxHeight } = cropBoxData;\n    const { width, height } = imageData;\n    const left = cropBoxData.left - canvasData.left - imageData.left;\n    const top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.image2, extend({\n      width,\n      height,\n    }, getTransforms(extend({\n      translateX: -left,\n      translateY: -top,\n    }, imageData))));\n\n    each(this.previews, (element) => {\n      const data = getData(element, DATA_PREVIEW);\n      const originalWidth = data.width;\n      const originalHeight = data.height;\n      let newWidth = originalWidth;\n      let newHeight = originalHeight;\n      let ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight,\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], extend({\n        width: width * ratio,\n        height: height * ratio,\n      }, getTransforms(extend({\n        translateX: -left * ratio,\n        translateY: -top * ratio,\n      }, imageData))));\n    });\n  },\n};\n","import {\n  EVENT_CROP,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  EVENT_DBLCLICK,\n  EVENT_POINTER_DOWN,\n  EVENT_POINTER_MOVE,\n  EVENT_POINTER_UP,\n  EVENT_RESIZE,\n  EVENT_WHEEL,\n  EVENT_ZOOM,\n} from './constants';\nimport {\n  addListener,\n  isFunction,\n  proxy,\n  removeListener,\n} from './utilities';\n\nexport default {\n  bind() {\n    const { element, options, cropper } = this;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, (this.onCropStart = proxy(this.cropStart, this)));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, (this.onWheel = proxy(this.wheel, this)));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, (this.onDblclick = proxy(this.dblclick, this)));\n    }\n\n    addListener(document, EVENT_POINTER_MOVE, (this.onCropMove = proxy(this.cropMove, this)));\n    addListener(document, EVENT_POINTER_UP, (this.onCropEnd = proxy(this.cropEnd, this)));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, (this.onResize = proxy(this.resize, this)));\n    }\n  },\n\n  unbind() {\n    const { element, options, cropper } = this;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(document, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(document, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  },\n};\n","import {\n  ACTION_CROP,\n  ACTION_ZOOM,\n  CLASS_CROP,\n  CLASS_MODAL,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_CROP_END,\n  EVENT_CROP_MOVE,\n  EVENT_CROP_START,\n  REGEXP_ACTIONS,\n} from './constants';\nimport {\n  addClass,\n  dispatchEvent,\n  each,\n  extend,\n  getData,\n  getPointer,\n  hasClass,\n  toggleClass,\n} from './utilities';\n\nexport default {\n  resize() {\n    const { options, container, containerData } = this;\n    const minContainerWidth = Number(options.minContainerWidth) || 200;\n    const minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth ||\n      containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    const ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      let canvasData;\n      let cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(each(canvasData, (n, i) => {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(each(cropBoxData, (n, i) => {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n\n  dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n\n  wheel(e) {\n    const ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    let delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(() => {\n      this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n\n  cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    const { options, pointers } = this;\n    let action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      each(e.changedTouches, (touch) => {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action,\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n\n  cropMove(e) {\n    const { action } = this;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    const { pointers } = this;\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action,\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      each(e.changedTouches, (touch) => {\n        extend(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      extend(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n\n  cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    const { action, pointers } = this;\n\n    if (e.changedTouches) {\n      each(e.changedTouches, (touch) => {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action,\n    });\n  },\n};\n","import {\n  ACTION_ALL,\n  ACTION_CROP,\n  ACTION_EAST,\n  ACTION_MOVE,\n  ACTION_NORTH,\n  ACTION_NORTH_EAST,\n  ACTION_NORTH_WEST,\n  ACTION_SOUTH,\n  ACTION_SOUTH_EAST,\n  ACTION_SOUTH_WEST,\n  ACTION_WEST,\n  ACTION_ZOOM,\n  CLASS_HIDDEN,\n} from './constants';\nimport {\n  each,\n  getMaxZoomRatio,\n  getOffset,\n  removeClass,\n} from './utilities';\n\nexport default {\n  change(e) {\n    const {\n      options,\n      canvasData,\n      containerData,\n      cropBoxData,\n      pointers,\n    } = this;\n    let { action } = this;\n    let { aspectRatio } = options;\n    let {\n      left,\n      top,\n      width,\n      height,\n    } = cropBoxData;\n    const right = left + width;\n    const bottom = top + height;\n    let minLeft = 0;\n    let minTop = 0;\n    let maxWidth = containerData.width;\n    let maxHeight = containerData.height;\n    let renderable = true;\n    let offset;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      ({ minLeft, minTop } = cropBoxData);\n      maxWidth = minLeft + Math.min(\n        containerData.width,\n        canvasData.width,\n        canvasData.left + canvasData.width,\n      );\n      maxHeight = minTop + Math.min(\n        containerData.height,\n        canvasData.height,\n        canvasData.top + canvasData.height,\n      );\n    }\n\n    const pointer = pointers[Object.keys(pointers)[0]];\n    const range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY,\n    };\n    const check = (side) => {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || (aspectRatio &&\n          (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= (range.x / aspectRatio) / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || (aspectRatio &&\n          (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (range.y * aspectRatio) / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || (aspectRatio &&\n          (top <= minTop || bottom >= maxHeight)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (range.x / aspectRatio) / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || (aspectRatio &&\n          (left <= minLeft || right >= maxWidth)))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= (range.y * aspectRatio) / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    each(pointers, (p) => {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  },\n};\n","import {\n  CLASS_CROP,\n  CLASS_DISABLED,\n  CLASS_HIDDEN,\n  CLASS_MODAL,\n  CLASS_MOVE,\n  DATA_ACTION,\n  DRAG_MODE_CROP,\n  DRAG_MODE_MOVE,\n  DRAG_MODE_NONE,\n  EVENT_LOAD,\n  EVENT_ZOOM,\n  NAMESPACE,\n} from './constants';\nimport {\n  addClass,\n  dispatchEvent,\n  each,\n  extend,\n  getContainSizes,\n  getOffset,\n  getPointersCenter,\n  getSourceCanvas,\n  isFunction,\n  isNumber,\n  isPlainObject,\n  isUndefined,\n  normalizeDecimalNumber,\n  removeClass,\n  removeData,\n  removeListener,\n  setData,\n  toggleClass,\n} from './utilities';\n\nexport default {\n  // Show the crop box manually\n  crop() {\n    if (this.ready && !this.disabled) {\n      if (!this.cropped) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n  // Reset the image and crop box to their initial states\n  reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = extend({}, this.initialImageData);\n      this.canvasData = extend({}, this.initialCanvasData);\n      this.cropBoxData = extend({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n  // Clear the crop box\n  clear() {\n    if (this.cropped && !this.disabled) {\n      extend(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [onlyColorChanged] - Indicate if the new image only changed color.\n   * @returns {Object} this\n   */\n  replace(url, onlyColorChanged = false) {\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (onlyColorChanged) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.image2.src = url;\n\n          each(this.previews, (element) => {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        // Clear previous data\n        this.options.data = null;\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n  // Enable (unfreeze) the cropper\n  enable() {\n    if (this.ready) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  // Disable (freeze) the cropper\n  disable() {\n    if (this.ready) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  // Destroy the cropper and remove the instance from the image\n  destroy() {\n    const { element, image } = this;\n\n    if (this.loaded) {\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.unbuild();\n      removeClass(element, CLASS_HIDDEN);\n    } else if (this.isImg) {\n      removeListener(element, EVENT_LOAD, this.onStart);\n    } else if (image) {\n      image.parentNode.removeChild(image);\n    }\n\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} offsetY - The relative offset distance on the y-axis.\n   * @returns {Object} this\n   */\n  move(offsetX, offsetY) {\n    const { left, top } = this.canvasData;\n\n    return this.moveTo(\n      isUndefined(offsetX) ? offsetX : (left + Number(offsetX)),\n      isUndefined(offsetY) ? offsetY : (top + Number(offsetY)),\n    );\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Object} this\n   */\n  moveTo(x, y = x) {\n    const { canvasData } = this;\n    let changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoom(ratio, _originalEvent) {\n    const { canvasData } = this;\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo((canvasData.width * ratio) / canvasData.naturalWidth, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoomTo(ratio, _originalEvent) {\n    const { options, canvasData } = this;\n    const {\n      width,\n      height,\n      naturalWidth,\n      naturalHeight,\n    } = canvasData;\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      const newWidth = naturalWidth * ratio;\n      const newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth,\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        const { pointers } = this;\n        const offset = getOffset(this.cropper);\n        const center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY,\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * (\n          ((center.pageX - offset.left) - canvasData.left) / width\n        );\n        canvasData.top -= (newHeight - height) * (\n          ((center.pageY - offset.top) - canvasData.top) / height\n        );\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Object} this\n   */\n  scaleX(scaleX) {\n    const { scaleY } = this.imageData;\n\n    return this.scale(scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scaleY(scaleY) {\n    const { scaleX } = this.imageData;\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scale(scaleX, scaleY = scaleX) {\n    const { imageData } = this;\n    let transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData(rounded = false) {\n    const {\n      options,\n      imageData,\n      canvasData,\n      cropBoxData,\n    } = this;\n    let data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height,\n      };\n\n      const ratio = imageData.width / imageData.naturalWidth;\n\n      each(data, (n, i) => {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Object} this\n   */\n  setData(data) {\n    const { options, imageData, canvasData } = this;\n    const cropBoxData = {};\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      let transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      const ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = (data.x * ratio) + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = (data.y * ratio) + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData() {\n    return this.ready ? extend({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData() {\n    return this.loaded ? extend({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData() {\n    const { canvasData } = this;\n    const data = {};\n\n    if (this.ready) {\n      each([\n        'left',\n        'top',\n        'width',\n        'height',\n        'naturalWidth',\n        'naturalHeight',\n      ], (n) => {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Object} this\n   */\n  setCanvasData(data) {\n    const { canvasData } = this;\n    const { aspectRatio } = canvasData;\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData() {\n    const { cropBoxData } = this;\n    let data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height,\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Object} this\n   */\n  setCropBoxData(data) {\n    const { cropBoxData } = this;\n    const { aspectRatio } = this.options;\n    let widthChanged;\n    let heightChanged;\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas(options = {}) {\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    const { canvasData } = this;\n    const source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    const {\n      x,\n      y,\n      width: initialWidth,\n      height: initialHeight,\n    } = this.getData();\n    const aspectRatio = initialWidth / initialHeight;\n    const maxSizes = getContainSizes({\n      aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity,\n    });\n    const minSizes = getContainSizes({\n      aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0,\n    });\n    let {\n      width,\n      height,\n    } = getContainSizes({\n      aspectRatio,\n      width: options.width || initialWidth,\n      height: options.height || initialHeight,\n    });\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    const { imageSmoothingEnabled = true, imageSmoothingQuality } = options;\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    const sourceWidth = source.width;\n    const sourceHeight = source.height;\n\n    // Source canvas parameters\n    let srcX = x;\n    let srcY = y;\n    let srcWidth;\n    let srcHeight;\n\n    // Destination canvas parameters\n    let dstX;\n    let dstY;\n    let dstWidth;\n    let dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    const params = [\n      srcX,\n      srcY,\n      srcWidth,\n      srcHeight,\n    ];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      const scale = width / initialWidth;\n\n      params.push(\n        dstX * scale,\n        dstY * scale,\n        dstWidth * scale,\n        dstHeight * scale,\n      );\n    }\n\n    context.drawImage(source, ...params.map(param => Math.floor(normalizeDecimalNumber(param))));\n\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Object} this\n   */\n  setAspectRatio(aspectRatio) {\n    const { options } = this;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Object} this\n   */\n  setDragMode(mode) {\n    const { options, dragBox, face } = this;\n\n    if (this.loaded && !this.disabled) {\n      const croppable = mode === DRAG_MODE_CROP;\n      const movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = (croppable || movable) ? mode : DRAG_MODE_NONE;\n\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  },\n};\n","import DEFAULTS from './defaults';\nimport TEMPLATE from './template';\nimport render from './render';\nimport preview from './preview';\nimport events from './events';\nimport handlers from './handlers';\nimport change from './change';\nimport methods from './methods';\nimport {\n  ACTION_ALL,\n  CLASS_HIDDEN,\n  CLASS_HIDE,\n  CLASS_INVISIBLE,\n  CLASS_MODAL,\n  CLASS_MOVE,\n  DATA_ACTION,\n  EVENT_CROP,\n  EVENT_ERROR,\n  EVENT_LOAD,\n  EVENT_READY,\n  NAMESPACE,\n  REGEXP_DATA_URL,\n  REGEXP_DATA_URL_JPEG,\n  REGEXP_TAG_NAME,\n  WINDOW,\n} from './constants';\nimport {\n  addClass,\n  addListener,\n  addTimestamp,\n  arrayBufferToDataURL,\n  dataURLToArrayBuffer,\n  dispatchEvent,\n  extend,\n  getData,\n  getImageNaturalSizes,\n  getOrientation,\n  isCrossOriginURL,\n  isFunction,\n  isPlainObject,\n  parseOrientation,\n  proxy,\n  removeClass,\n  removeListener,\n  setData,\n} from './utilities';\n\nconst AnotherCropper = WINDOW.Cropper;\n\nclass Cropper {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  constructor(element, options = {}) {\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = extend({}, DEFAULTS, isPlainObject(options) && options);\n    this.complete = false;\n    this.cropped = false;\n    this.disabled = false;\n    this.isImg = false;\n    this.limited = false;\n    this.loaded = false;\n    this.ready = false;\n    this.replaced = false;\n    this.wheeling = false;\n    this.originalUrl = '';\n    this.canvasData = null;\n    this.cropBoxData = null;\n    this.previews = null;\n    this.pointers = {};\n    this.init();\n  }\n\n  init() {\n    const { element } = this;\n    const tagName = element.tagName.toLowerCase();\n    let url;\n\n    if (getData(element, NAMESPACE)) {\n      return;\n    }\n\n    setData(element, NAMESPACE, this);\n\n    if (tagName === 'img') {\n      this.isImg = true;\n\n      // e.g.: \"img/picture.jpg\"\n      url = element.getAttribute('src') || '';\n      this.originalUrl = url;\n\n      // Stop when it's a blank image\n      if (!url) {\n        return;\n      }\n\n      // e.g.: \"http://example.com/img/picture.jpg\"\n      url = element.src;\n    } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n      url = element.toDataURL();\n    }\n\n    this.load(url);\n  }\n\n  load(url) {\n    if (!url) {\n      return;\n    }\n\n    this.url = url;\n    this.imageData = {};\n\n    const { element, options } = this;\n\n    if (!options.checkOrientation || !window.ArrayBuffer) {\n      this.clone();\n      return;\n    }\n\n    // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n    if (REGEXP_DATA_URL.test(url)) {\n      if (REGEXP_DATA_URL_JPEG.test(url)) {\n        this.read(dataURLToArrayBuffer(url));\n      } else {\n        this.clone();\n      }\n\n      return;\n    }\n\n    const xhr = new XMLHttpRequest();\n\n    xhr.onerror = () => {\n      this.clone();\n    };\n\n    xhr.onload = () => {\n      this.read(xhr.response);\n    };\n\n    if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n      url = addTimestamp(url);\n    }\n\n    xhr.open('get', url);\n    xhr.responseType = 'arraybuffer';\n    xhr.withCredentials = element.crossOrigin === 'use-credentials';\n    xhr.send();\n  }\n\n  read(arrayBuffer) {\n    const { options, imageData } = this;\n    const orientation = getOrientation(arrayBuffer);\n    let rotate = 0;\n    let scaleX = 1;\n    let scaleY = 1;\n\n    if (orientation > 1) {\n      this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n      ({ rotate, scaleX, scaleY } = parseOrientation(orientation));\n    }\n\n    if (options.rotatable) {\n      imageData.rotate = rotate;\n    }\n\n    if (options.scalable) {\n      imageData.scaleX = scaleX;\n      imageData.scaleY = scaleY;\n    }\n\n    this.clone();\n  }\n\n  clone() {\n    const { element, url } = this;\n    let crossOrigin;\n    let crossOriginUrl;\n\n    if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n      ({ crossOrigin } = element);\n\n      if (crossOrigin) {\n        crossOriginUrl = url;\n      } else {\n        crossOrigin = 'anonymous';\n\n        // Bust cache when there is not a \"crossOrigin\" property\n        crossOriginUrl = addTimestamp(url);\n      }\n    }\n\n    this.crossOrigin = crossOrigin;\n    this.crossOriginUrl = crossOriginUrl;\n\n    const image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = crossOriginUrl || url;\n\n    const start = proxy(this.start, this);\n    const stop = proxy(this.stop, this);\n\n    this.image = image;\n    this.onStart = start;\n    this.onStop = stop;\n\n    if (this.isImg) {\n      if (element.complete) {\n        this.start();\n      } else {\n        addListener(element, EVENT_LOAD, start);\n      }\n    } else {\n      addListener(image, EVENT_LOAD, start);\n      addListener(image, EVENT_ERROR, stop);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }\n\n  start(event) {\n    const image = this.isImg ? this.element : this.image;\n\n    if (event) {\n      removeListener(image, EVENT_LOAD, this.onStart);\n      removeListener(image, EVENT_ERROR, this.onStop);\n    }\n\n    getImageNaturalSizes(image, (naturalWidth, naturalHeight) => {\n      extend(this.imageData, {\n        naturalWidth,\n        naturalHeight,\n        aspectRatio: naturalWidth / naturalHeight,\n      });\n      this.loaded = true;\n      this.build();\n    });\n  }\n\n  stop() {\n    const { image } = this;\n\n    removeListener(image, EVENT_LOAD, this.onStart);\n    removeListener(image, EVENT_ERROR, this.onStop);\n    image.parentNode.removeChild(image);\n    this.image = null;\n  }\n\n  build() {\n    if (!this.loaded) {\n      return;\n    }\n\n    // Unbuild first when replace\n    if (this.ready) {\n      this.unbuild();\n    }\n\n    const { element, options, image } = this;\n\n    // Create cropper elements\n    const container = element.parentNode;\n    const template = document.createElement('div');\n\n    template.innerHTML = TEMPLATE;\n\n    const cropper = template.querySelector(`.${NAMESPACE}-container`);\n    const canvas = cropper.querySelector(`.${NAMESPACE}-canvas`);\n    const dragBox = cropper.querySelector(`.${NAMESPACE}-drag-box`);\n    const cropBox = cropper.querySelector(`.${NAMESPACE}-crop-box`);\n    const face = cropBox.querySelector(`.${NAMESPACE}-face`);\n\n    this.container = container;\n    this.cropper = cropper;\n    this.canvas = canvas;\n    this.dragBox = dragBox;\n    this.cropBox = cropBox;\n    this.viewBox = cropper.querySelector(`.${NAMESPACE}-view-box`);\n    this.face = face;\n\n    canvas.appendChild(image);\n\n    // Hide the original image\n    addClass(element, CLASS_HIDDEN);\n\n    // Inserts the cropper after to the current image\n    container.insertBefore(cropper, element.nextSibling);\n\n    // Show the image if is hidden\n    if (!this.isImg) {\n      removeClass(image, CLASS_HIDE);\n    }\n\n    this.initPreview();\n    this.bind();\n\n    options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n    options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n    this.cropped = options.autoCrop;\n\n    if (options.autoCrop) {\n      if (options.modal) {\n        addClass(dragBox, CLASS_MODAL);\n      }\n    } else {\n      addClass(cropBox, CLASS_HIDDEN);\n    }\n\n    if (!options.guides) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-dashed`), CLASS_HIDDEN);\n    }\n\n    if (!options.center) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-center`), CLASS_HIDDEN);\n    }\n\n    if (options.background) {\n      addClass(cropper, `${NAMESPACE}-bg`);\n    }\n\n    if (!options.highlight) {\n      addClass(face, CLASS_INVISIBLE);\n    }\n\n    if (options.cropBoxMovable) {\n      addClass(face, CLASS_MOVE);\n      setData(face, DATA_ACTION, ACTION_ALL);\n    }\n\n    if (!options.cropBoxResizable) {\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-line`), CLASS_HIDDEN);\n      addClass(cropBox.getElementsByClassName(`${NAMESPACE}-point`), CLASS_HIDDEN);\n    }\n\n    this.setDragMode(options.dragMode);\n    this.render();\n    this.ready = true;\n    this.setData(options.data);\n\n    // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n    this.completing = setTimeout(() => {\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true,\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n      dispatchEvent(element, EVENT_CROP, this.getData());\n\n      this.complete = true;\n    }, 0);\n  }\n\n  unbuild() {\n    if (!this.ready) {\n      return;\n    }\n\n    if (!this.complete) {\n      clearTimeout(this.completing);\n    }\n\n    this.ready = false;\n    this.complete = false;\n    this.initialImageData = null;\n\n    // Clear `initialCanvasData` is necessary when replace\n    this.initialCanvasData = null;\n    this.initialCropBoxData = null;\n    this.containerData = null;\n    this.canvasData = null;\n\n    // Clear `cropBoxData` is necessary when replace\n    this.cropBoxData = null;\n    this.unbind();\n    this.resetPreview();\n    this.previews = null;\n    this.viewBox = null;\n    this.cropBox = null;\n    this.dragBox = null;\n    this.canvas = null;\n    this.container = null;\n    this.cropper.parentNode.removeChild(this.cropper);\n    this.cropper = null;\n  }\n\n  /**\n   * Get the no conflict cropper class.\n   * @returns {Cropper} The cropper class.\n   */\n  static noConflict() {\n    window.Cropper = AnotherCropper;\n    return Cropper;\n  }\n\n  /**\n   * Change the default options.\n   * @param {Object} options - The new default options.\n   */\n  static setDefaults(options) {\n    extend(DEFAULTS, isPlainObject(options) && options);\n  }\n}\n\nextend(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n"],"names":["WINDOW","window","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_ERROR","EVENT_LOAD","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","NaN","isNaN","Number","isNumber","value","isUndefined","isObject","hasOwnProperty","Object","prototype","isPlainObject","constructor","call","e","isFunction","each","data","callback","Array","isArray","length","i","keys","forEach","key","extend","obj","args","assign","arg","proxy","fn","context","args2","apply","concat","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","removeListener","type","listener","options","types","split","t","onceListener","removeEventListener","detachEvent","addListener","once","originalListener","addEventListener","attachEvent","dispatchEvent","event","Event","CustomEvent","document","createEvent","initEvent","initCustomEvent","fireEvent","getOffset","doc","documentElement","box","getBoundingClientRect","left","scrollX","scrollLeft","clientLeft","top","scrollY","scrollTop","clientTop","empty","firstChild","removeChild","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","navigator","IS_SAFARI_OR_UIWEBVIEW","userAgent","getImageNaturalSizes","image","naturalWidth","naturalHeight","newImage","createElement","onload","width","height","src","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","endOnly","pageX","pageY","end","getPointersCenter","count","isFinite","getContainSizes","aspectRatio","isValidNumber","getRotatedSizes","degree","arc","PI","sinArc","sin","cosArc","cos","getSourceCanvas","imageNaturalWidth","imageNaturalHeight","fillColor","imageSmoothingEnabled","imageSmoothingQuality","maxWidth","Infinity","maxHeight","minWidth","minHeight","canvas","getContext","maxSizes","minSizes","min","max","params","fillStyle","fillRect","save","translate","scale","drawImage","map","floor","param","restore","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","btoa","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","minContainerWidth","offsetHeight","minContainerHeight","imageData","viewMode","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","minCanvasWidth","minCanvasHeight","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","renderImage","limitCropBox","output","autoCropArea","initialCropBoxData","minCropBoxWidth","minCropBoxHeight","maxCropBoxWidth","maxCropBoxHeight","movable","cropBoxMovable","face","cropBox","disabled","preview","complete","crossOrigin","crossOriginUrl","viewBox","appendChild","image2","previews","querySelector","querySelectorAll","img","innerHTML","cssText","html","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","newWidth","newHeight","getElementsByTagName","cropstart","cropmove","cropend","crop","zoom","onCropStart","cropStart","zoomable","zoomOnWheel","onWheel","wheel","toggleDragModeOnDblclick","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","responsive","onResize","resize","getCanvasData","getCropBoxData","render","setCanvasData","n","setCropBoxData","dragMode","setDragMode","dragBox","wheelZoomRatio","delta","preventDefault","wheeling","deltaY","wheelDelta","detail","action","changedTouches","touch","identifier","zoomOnTouch","target","cropping","change","modal","right","bottom","renderable","shiftKey","range","check","side","x","y","move","p","ready","onlyColorChanged","isImg","replaced","load","loaded","originalUrl","unbuild","onStart","parentNode","offsetX","offsetY","moveTo","_originalEvent","zoomTo","center","rotateTo","rotatable","scalable","rounded","widthChanged","heightChanged","HTMLCanvasElement","source","initialWidth","initialHeight","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","mode","croppable","AnotherCropper","Cropper","tagName","Error","DEFAULTS","init","toDataURL","checkOrientation","clone","read","xhr","XMLHttpRequest","onerror","response","checkCrossOrigin","open","responseType","withCredentials","send","stop","onStop","insertBefore","nextSibling","build","template","TEMPLATE","initPreview","bind","autoCrop","guides","getElementsByClassName","background","highlight","cropBoxResizable","completing","setTimeout","unbind","resetPreview","events","handlers","methods"],"mappings":"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"}